# Ну что ж, тут я решил "повеселиться"
# С первой строкой кода и так всё ясно
print('Давай проверим, является ли введённое тобой слово палиндромом ^_^')

# Функция принимает ввод, проверяет что мы ввели(буквы или нет) и даже "смотрит" на длину введённого слова
# И конечно же в ней есть цикл (куда же без него)
def validation_word():
    while True:
        word = input('Введи слово сюда: ')
        if word.isalpha() and len(word) > 1:
            return word
        else:
            print('Ну уж нет, так не пойдёт -_-\nСлово должно состоять из букв(больше одной буквы)')
            
# this_word_palindrom_is делает почти что магию, а именно приводит всё что мы получили на ввод к нижниму регистру
# А потом сравнивает слово целиком с его "зеркальной" копией и говорит на о результате сравнения (True\False)
def this_word_palindrom_is(word):
    normalization_word = word.lower()
    return normalization_word == ''.join(reversed(normalization_word))

# Тут начинается основной цикл (он к стати бесконечный, почти)
while True:
    word = validation_word()
# Здесь вроде бы всё ясно, если слово к нам вернулось после валидации, то оно подходит по параметрам и является палендром
    print('Хм, дай-ка подумать ... Является ли это слово палиндромом?')
    if this_word_palindrom_is(word):
        print('Да!\nКстати, скрипт завершён')
        break
    else:
        print(' -_-\n(нет)')
# Ну а если не вернулось\ мы получили False то мы говорим "нет" и продолжаем

# Тут у нас следующая проверка и возможность выхода за одно (сам не знаю как так вышло, но такая реализауция оказалась удобнее всего)
    exit_validation = input('Вводи "выход" для выхода\n(как угодно, ведь я добавил к функции метод lower)\nИли попробуй снова (а нужно ли оно тебе?)\nЕсли хочешь - вводи слово:')
# Проверяем тоже самое что и в слове + сравнваем с любой вариацией слова "выход"
# В код должно вернуться слово "выход" в нижнем регистре из-за метода lower
# Ну а дальше всё стандартно, просто пробегаемся по циклу
    if exit_validation.lower() == 'выход':
        print('Серьёзно?!\nНу ладно...\nЯ не осуждаю (почти)')
        break
    elif exit_validation.isalpha() and len(exit_validation) > 1:
        print('Хм\nВыглядит как слово, сейчас проверим')
# Проверяем новое полученное слово (если оно не совпало с "выход")
        if this_word_palindrom_is(exit_validation):
            print('* _ *\nДа! Это оно!!!')
            print('Скрипт завершён')
            break
        else:
            print('Нет, нет, нет и ещё раз НЕЕЕТ!!!\n\nЭто всё ещё не палиндром\nТы точно понимаешь что это такое?\nМожет надо было выйти?')
    else:
        print('Ну уж нет, это никуда не годится Т-Т\nСлово должно состоять из букв(больше одной буквы)\nТы ведь уже добрадся до последней строчки кода 0_0')
        print('Пора бы и запомнить уже -_-')
