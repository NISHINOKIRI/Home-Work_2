# Погнали разбирать матешу ееее
# Первый вариант для "ветиранов" (это sum_pairs_complex если что)
# Второй попроще, для 'самых маленьких' (это sum_pairs_simple соответственно)

# Начнём разбор с первого
def sum_pairs_complex(numbers):
    # Тут мы скажем нашей программе, что если длина списка нечетная
    # то мы убираем последний элемент списка
    # (вроде это самое логичное решение, но да ладно)
    # кстати если список будет изначально чётным, то ничего не произойдет
    if len(numbers) % 2 != 0:
        numbers = numbers[:-1]
    # Далее мы создадим пустой список для хранения пар чисел 
    sums = []
    # Тут в дело вступает "хитрая" логика, которая проходит по списку
    # но не как обычно в диапазоне (т.е. каждый шаг)
    # А с шагом длиной в 2 элемента
    # Ну и сам диапазон берем от 0 до последнего числа
    # (т.к. последнее число в диапазон не входит, а это нам только "на руку")
    for i in range(0, len(numbers), 2):
        pair_sum = numbers[i] + numbers[i + 1]  # Суммируем пару
        sums.append(pair_sum)  # Добавляем сумму в новый список
    # А после всё становится ещё проще, ведь мы просто складываем 1 элемент (numbers[i])
    # со следующим за ним элементом (numbers[i + 1])
    return sums
# Ну и в конце не забываем вернуть список с суммами пар
# Ну и если мы при вводе выберем сложный вариант, но на вывод получим sum_pairs_complex(numbers)


def sum_pairs_simple(numbers):
    # Если длина списка нечетная, убираем последнее число
    if len(numbers) % 2 != 0:
        numbers.pop()  # Дропаем последний элемент

    sums = []  # Создаем пустой список для хранения сумм пар

    for i in range(0, len(numbers), 2):  # Проходим по списку
        pair_sum = numbers[i] + numbers[i + 1]  # Суммируем пары
        sums.append(pair_sum)  # Добавляем сумму пар в список

    return sums  # Возвращаем список с суммами пар


# Самая интересная часть
u_input = input('Выберите уровень сложности:\n1 - HARDCORE, 2 - lightweight BABY\n')
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]  # Пример списка (да-да, он не бесполезный)
# он просто нечётный, который становится чётным

# Ну а тут уже самая простая часть
# Если нажимаем на ввод единичку - запускаем вариант для "ветеранов"
# Подаём на ввод двоечку - запускаем вариант для "самых маленьких"
# ну а иначе говорим выбери между один или два
# и так уж и быть даём возможность выхода через ввод слова exit (даже с ловером, а то мало ли опечатаешься, или капс прожат, с кем не бывает?)
while True:
    if u_input.lower() == 'exit':
        print('exit')
        break
    if u_input == '1':
        result = sum_pairs_complex(numbers)
        print(result)
        break
    elif u_input == '2':
        result = sum_pairs_simple(numbers)
        print(result)
        break
    else:
        result = 'Неверный выбор.\nПросто выбери, 1 или 2\nОдно из двух'
        print(result)
        u_input = input('Сначала хорошо подума что выбрать, а потом попытайся снова, может ты уже передумал? Тогда вводи exit')
